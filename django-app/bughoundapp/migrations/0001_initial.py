# Generated by Django 4.2.11 on 2024-04-17 19:30

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0012_alter_user_first_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='Employee',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('last_login', models.DateTimeField(blank=True, null=True, verbose_name='last login')),
                ('username', models.CharField(max_length=255, unique=True)),
                ('email', models.EmailField(max_length=255, unique=True)),
                ('name', models.CharField(max_length=255)),
                ('role', models.CharField(max_length=255)),
                ('is_active', models.BooleanField(default=True)),
                ('is_staff', models.BooleanField(default=True)),
                ('is_superuser', models.BooleanField(default=False)),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.permission', verbose_name='user permissions')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='Program',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('ProgramName', models.CharField(max_length=255, unique=True)),
            ],
        ),
        migrations.CreateModel(
            name='FunctionalArea',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('AreaName', models.CharField(max_length=255)),
                ('Program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bughoundapp.program')),
            ],
        ),
        migrations.CreateModel(
            name='BugReport',
            fields=[
                ('id', models.IntegerField(primary_key=True, serialize=False)),
                ('ReportTypeID', models.IntegerField()),
                ('Severity', models.CharField(max_length=255)),
                ('ProblemSummary', models.TextField()),
                ('ProblemDescription', models.TextField()),
                ('Reproducible', models.BooleanField(default=True)),
                ('SuggestedFix', models.TextField()),
                ('ReportedByDate', models.DateField()),
                ('Comments', models.CharField(blank=True, default='', max_length=255, null=True)),
                ('Status', models.CharField(blank=True, default='Open', max_length=100, null=True)),
                ('Priority', models.CharField(blank=True, default='Normal', max_length=100, null=True)),
                ('Resolution', models.CharField(blank=True, default='Pending', max_length=100, null=True)),
                ('ResolutionVersion', models.CharField(blank=True, default='v1', max_length=100, null=True)),
                ('ResolvedByDate', models.DateField(blank=True, null=True)),
                ('TestedByDate', models.DateField(blank=True, null=True)),
                ('TreatedAsDeferred', models.BooleanField(default=False)),
                ('AssignedToEmployee', models.ForeignKey(blank=True, default=0, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='assigned_bugs', to=settings.AUTH_USER_MODEL)),
                ('FunctionalArea', models.ForeignKey(blank=True, default=0, null=True, on_delete=django.db.models.deletion.SET_NULL, to='bughoundapp.functionalarea')),
                ('Program', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bughoundapp.program')),
                ('ReportedByEmployee', models.ForeignKey(default=0, on_delete=django.db.models.deletion.CASCADE, related_name='reported_bugs', to=settings.AUTH_USER_MODEL)),
                ('ResolvedByEmployee', models.ForeignKey(blank=True, default=0, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='resolved_bugs', to=settings.AUTH_USER_MODEL)),
                ('TestedByEmployee', models.ForeignKey(blank=True, default=0, null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='tested_bugs', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Attachment',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('FileType', models.CharField(choices=[('pdf', 'PDF'), ('img', 'Image')], max_length=255)),
                ('FilePath', models.FileField(upload_to='media/')),
                ('bugreport', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='bughoundapp.bugreport')),
            ],
        ),
    ]
